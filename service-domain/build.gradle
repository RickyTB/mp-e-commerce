plugins {
    id 'java'
    id "io.freefair.lombok" 
}


group = 'com.programacion.ecommerce'
version = '1.0-SNAPSHOT'
description = 'Proyecto grupal Programaci√≥n Distribuida'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()
}

ext {
    helidonversion = '2.0.1'
}

dependencies {
    implementation enforcedPlatform("io.helidon:helidon-dependencies:${project.helidonversion}")
    implementation 'io.helidon.microprofile.bundles:helidon-microprofile'

    runtimeOnly 'jakarta.activation:jakarta.activation-api'

    // JPA
    implementation group: 'io.helidon.integrations.cdi', name: 'helidon-integrations-cdi-datasource-hikaricp'
    implementation group: 'io.helidon.integrations.cdi', name: 'helidon-integrations-cdi-jta-weld'
    implementation group: 'io.helidon.integrations.cdi', name: 'helidon-integrations-cdi-jpa'
    implementation group: 'io.helidon.integrations.cdi', name: 'helidon-integrations-cdi-hibernate'
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '2.2.2'
    implementation 'javax.transaction:javax.transaction-api:1.2'

    // Base de datos
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.22'

    runtimeOnly 'org.jboss:jandex:2.1.1.Final'
}

// define a custom task to copy all dependencies in the runtime classpath
// into build/libs/libs
// uses built-in Copy
task copyLibs(type: Copy) {
  from configurations.runtimeClasspath
  into 'build/libs/libs'
}

// add it as a dependency of built-in task 'assemble'
copyLibs.dependsOn jar
assemble.dependsOn copyLibs

// default jar configuration
// set the main classpath
// add each jar under build/libs/libs into the classpath
jar {
  archiveFileName = "${project.name}.jar"
  manifest {
    attributes ('Main-Class': 'io.helidon.microprofile.cdi.Main',
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
               )
  }
}


