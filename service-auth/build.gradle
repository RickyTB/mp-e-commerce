/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

ext {
    helidonversion = '2.0.1'
}

dependencies {
    implementation enforcedPlatform("io.helidon:helidon-dependencies:${project.helidonversion}")
    implementation 'io.helidon.microprofile.bundles:helidon-microprofile'

    runtimeOnly 'jakarta.activation:jakarta.activation-api'
    runtimeOnly 'org.jboss:jandex:2.1.1.Final'
    implementation 'io.vertx:vertx-auth-jwt:3.9.5'
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    implementation project(":ecommerce-domain")
}

group = 'com.programacion.ecommerce'
version = '1.0-SNAPSHOT'
description = 'Proyecto grupal Programaci√≥n Distribuida'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    // Define the main class for the application.
    mainClass = 'io.helidon.microprofile.cdi.Main'
}

sourceSets {
  	main {
  	    output.resourcesDir=file("${buildDir}/classes/java/main")
    }
}

// define a custom task to copy all dependencies in the runtime classpath
// into build/libs/libs
// uses built-in Copy
task copyLibs(type: Copy) {
  from configurations.runtimeClasspath
  into 'build/libs/libs'
}

// add it as a dependency of built-in task 'assemble'
copyLibs.dependsOn jar
assemble.dependsOn copyLibs

// default jar configuration
// set the main classpath
// add each jar under build/libs/libs into the classpath
jar {
  archiveFileName = "${project.name}.jar"
  manifest {
    attributes ('Main-Class': 'io.helidon.microprofile.cdi.Main',
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
               )
  }
}